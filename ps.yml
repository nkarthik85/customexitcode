---
trigger:
  - master
jobs:
  - job: PShellTest
    pool:
      vmImage: windows-latest
    displayName: Run PSTest
    steps:
      - task: PowerShell@2
        name: Task_A
        inputs:
          targetType: inline
          errorActionPreference: SilentlyContinue
          script: >
           #$result = filePath: $(System.DefaultWorkingDirectory)\test2.ps1
           filePath: $(System.DefaultWorkingDirectory)\test.ps1
            Write-Host "TestResult: $filePath"
            Write-Host "##vso[task.setvariable variable=output;isOutput=true]$result"
            #Write-Host "##vso[task.LogIssue type=error;]This is the error"
            #Write-Output ("[Error] Failing task since return code was {0} while expected 0." -f $exitCode)
            #echo $(outputs)
            #echo $(Task_A.out)
            #echo $(SomeTask.out)
            
       
      - task: PowerShell@2
        name: Task_B
        condition: eq(variables['Task_A.output'], 'true') 
        inputs:
          errorActionPreference: SilentlyContinue
          targetType: inline
          script: >
            $url = "https://hrms.techmango.net"
              Write-Host "URL: $url"
              $pipeline = Invoke-RestMethod -Uri $url -Body @{
               search = "search index=_internal | reverse | href | table index,host,source,sourcetype,_raw"
              } -Method Post -Headers @{
                  Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
              }
              Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)

      - task: PowerShell@2
        displayName: Print Hello World 
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)\test.ps1
          #arguments: |
            #-input1 "Hello" -input2 "World"

      #- task: AzurePowerShell@5
        #name: Task_B
        #condition: ne(variables['Task_A.exitCode'], '1')
        #inputs:
          #errorActionPreference: SilentlyContinue
          #azureSubscription: '$(service_connection)'
          #ScriptType: 'InlineScript'
          #Inline: | 
            #$url = "https://hrms.techmango.net"
            #$token = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":$(system.accesstoken)"))
            #$body = "Techmango Technology Services Pvt Ltd"
            #$response = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"} -Method Post -Body $body -ContentType application/json
            #echo $response
          #azurePowerShellVersion: 'LatestVersion'
        #env:
          #SYSTEM_ACCESSTOKEN: $(System.AccessToken) 
